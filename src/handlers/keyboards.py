from telebot import types
from src.schemas.folder import FolderWithContentDto


def get_main_menu():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    questions_button = types.KeyboardButton("–û—Ç–≤–µ—Ç—ã –Ω–∞ —á–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã")
    special_question_button = types.KeyboardButton("–ù–∞–ø–∏—Å–∞—Ç—å —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å")
    donate_button = types.KeyboardButton("–ü–æ–∂–µ—Ä—Ç–≤–æ–≤–∞—Ç—å –≤ —Ñ–æ–Ω–¥")
    markup.add(questions_button)
    markup.add(special_question_button)
    markup.add(donate_button)
    return markup


def get_inline_keyboard_for_folder(folder: FolderWithContentDto) -> types.InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –∫–∞—Ç–∞–ª–æ–≥–∞"""
    markup = types.InlineKeyboardMarkup()
    for subfolder in folder.subfolders:
        markup.add(
            types.InlineKeyboardButton(
                text=f"üìÅ {subfolder.folder_name}", callback_data=f"folder_{subfolder.id}"
            )
        )

    for question in folder.questions:
        markup.add(
            types.InlineKeyboardButton(
                text=f"‚ùì {question.question[:20]}...", callback_data=f"question_{question.id}"
            )
        )

    markup.add(
        types.InlineKeyboardButton(
            text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
            callback_data=(
                f"folder_{folder.id}" if folder.id else "–û—Ç–≤–µ—Ç—ã –Ω–∞ —á–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã"
            ),
        )
    )

    return markup
